[tool.poetry]
name = "gmail-filter-manager"
version = "0.1.1"
description = "Gmail filer manager using YAML format."
authors = ["rcmdnk <rcmdnk@gmail.com>"]
repository = "https://github.com/rcmdnk/gmail_filter_manager"
homepage = "https://github.com/rcmdnk/gmail_filter_manager"
readme = "README.md"
license = "MIT"
keywords = ["gmail", "yaml", "cli"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Operating System :: OS Independent",
    "Topic :: Utilities",
]

[tool.poetry.dependencies]
python = ">=3.8.1,<3.12"
ruamel-yaml = "^0.17.32"

[tool.poetry.group.dev.dependencies]
pyproject-pre-commit = "0.0.15"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
gfm_extract = "gmail_filter_manager:gfm_extract"
gfm_make = "gmail_filter_manager:gfm_make"

[tool.black]
line-length = 79

[tool.autoflake]
remove-all-unused-imports = true
expand-star-imports = true
remove-duplicate-keys = true
remove-unused-variables = true

[tool.autopep8]
ignore = "E203,E501,W503"
recursive = true
aggressive = 3

[tool.isort]
profile = "black"
line_length = 79

[tool.flake8]
# E203 is not PEP8 compliant and black insert space around slice: [Frequently Asked Questions - Black 22.12.0 documentation](https://black.readthedocs.io/en/stable/faq.html#why-are-flake8-s-e203-and-w503-violated)
# E501: Line too long. Disable it to allow long lines of comments and print lines which black allows.
# W503 is the counter part of W504, which follows current PEP8: [Line break occurred before a binary operator (W503)](https://www.flake8rules.com/rules/W503.html)
# D100~D106: Missing docstrings other than class (D101)
# D401: First line should be in imperative mood

# N817: camelcase 'xml.etree.ElementTree' imported as acronym 'ET'
# T201: print found.

ignore = "E203,E501,W503,D100,D102,D103,D104,D105,D106,D401,N817,T201"
#max-complexity = 10
docstring-convention = "numpy"

[tool.bandit]
exclude_dirs = ["tests"]
# B404: import subprocess -> until fixing w/o subprocess
# B603: subprocess_without_shell_equals_true-> until fixing w/o subprocess, difficult to manage multi arguments especially for arguments including quotes with shell=True
# B607: start_process_with_partial_path: until fixing w/o subprocess, difficult to run fixed path on multi environments
skips = ["B404", "B603", "B607"]

[tool.mypy]
files = ["src/**/*.py"]
strict = true

warn_return_any = false
ignore_missing_imports = true
scripts_are_modules = true
warn_unused_ignores = true
warn_redundant_casts = true
install_types = true
non_interactive = true
